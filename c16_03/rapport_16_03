============================= test session starts ==============================
platform linux -- Python 3.9.2, pytest-6.2.2, py-1.10.0, pluggy-0.13.1
rootdir: /home/stidsem4/iut/2021/controle/leonard.gousset/c16_03
collected 7 items

test_16_03.py F.FFFFF                                                    [100%]

=================================== FAILURES ===================================
_____________________________ Test1603sute.test_10 _____________________________

self = <c16_03.test_16_03.Test1603sute testMethod=test_10>

    def test_10(self):
        try:
>           from .main  import Note

test_16_03.py:94: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    note1 = ('eleve1', 'math', 13)
    note2 = ('eleve1', 'physique', 15)
    note3 = ('eleve1', 'math', 13)
    note4 = ('eleve1', 'eco', 12)
    note5 = ('eleve1', 'eco', 13)
    note6 = ('eleve1', 'math', 12)
    note7 = ('eleve2', 'math', 13)
    note8 = ('eleve2', 'math', 14)
    
    notes = [note1, note2, note3, note4, note5, note6,note7,note8]
    
    #Question 4.a)
    liste1 = (i for i in notes if i[0] == 'eleve1')
>   moyenne1 = sum(x[2] for x in liste1)/len(liste1)
E   TypeError: object of type 'generator' has no len()

main.py:14: TypeError

During handling of the above exception, another exception occurred:

self = <c16_03.test_16_03.Test1603sute testMethod=test_10>

    def test_10(self):
        try:
            from .main  import Note
        except:
>          assert False
E          AssertionError: assert False

test_16_03.py:96: AssertionError
_____________________________ Test1603sute.test_4 ______________________________

self = <c16_03.test_16_03.Test1603sute testMethod=test_4>

    def test_4(self):
        try:
>           from main import moyenne_tuples
E           ModuleNotFoundError: No module named 'main'

test_16_03.py:16: ModuleNotFoundError

During handling of the above exception, another exception occurred:

self = <c16_03.test_16_03.Test1603sute testMethod=test_4>

    def test_4(self):
        try:
            from main import moyenne_tuples
        except ImportError:
            try:
>               from .main import moyenne_tuple as moyenne_tuples

test_16_03.py:19: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    note1 = ('eleve1', 'math', 13)
    note2 = ('eleve1', 'physique', 15)
    note3 = ('eleve1', 'math', 13)
    note4 = ('eleve1', 'eco', 12)
    note5 = ('eleve1', 'eco', 13)
    note6 = ('eleve1', 'math', 12)
    note7 = ('eleve2', 'math', 13)
    note8 = ('eleve2', 'math', 14)
    
    notes = [note1, note2, note3, note4, note5, note6,note7,note8]
    
    #Question 4.a)
    liste1 = (i for i in notes if i[0] == 'eleve1')
>   moyenne1 = sum(x[2] for x in liste1)/len(liste1)
E   TypeError: object of type 'generator' has no len()

main.py:14: TypeError
_____________________________ Test1603sute.test_5 ______________________________

self = <c16_03.test_16_03.Test1603sute testMethod=test_5>

    def test_5(self):
        try:
>           from .main  import Note, onotes

test_16_03.py:33: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    note1 = ('eleve1', 'math', 13)
    note2 = ('eleve1', 'physique', 15)
    note3 = ('eleve1', 'math', 13)
    note4 = ('eleve1', 'eco', 12)
    note5 = ('eleve1', 'eco', 13)
    note6 = ('eleve1', 'math', 12)
    note7 = ('eleve2', 'math', 13)
    note8 = ('eleve2', 'math', 14)
    
    notes = [note1, note2, note3, note4, note5, note6,note7,note8]
    
    #Question 4.a)
    liste1 = (i for i in notes if i[0] == 'eleve1')
>   moyenne1 = sum(x[2] for x in liste1)/len(liste1)
E   TypeError: object of type 'generator' has no len()

main.py:14: TypeError

During handling of the above exception, another exception occurred:

self = <c16_03.test_16_03.Test1603sute testMethod=test_5>

    def test_5(self):
        try:
            from .main  import Note, onotes
        except:
>           assert False
E           AssertionError: assert False

test_16_03.py:35: AssertionError
_____________________________ Test1603sute.test_6 ______________________________

self = <c16_03.test_16_03.Test1603sute testMethod=test_6>

    def test_6(self):
>       from .main import Note, onotes

test_16_03.py:41: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    note1 = ('eleve1', 'math', 13)
    note2 = ('eleve1', 'physique', 15)
    note3 = ('eleve1', 'math', 13)
    note4 = ('eleve1', 'eco', 12)
    note5 = ('eleve1', 'eco', 13)
    note6 = ('eleve1', 'math', 12)
    note7 = ('eleve2', 'math', 13)
    note8 = ('eleve2', 'math', 14)
    
    notes = [note1, note2, note3, note4, note5, note6,note7,note8]
    
    #Question 4.a)
    liste1 = (i for i in notes if i[0] == 'eleve1')
>   moyenne1 = sum(x[2] for x in liste1)/len(liste1)
E   TypeError: object of type 'generator' has no len()

main.py:14: TypeError
_____________________________ Test1603sute.test_8 ______________________________

self = <c16_03.test_16_03.Test1603sute testMethod=test_8>

    def test_8(self):
        try:
>           from .main import Note

test_16_03.py:67: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    note1 = ('eleve1', 'math', 13)
    note2 = ('eleve1', 'physique', 15)
    note3 = ('eleve1', 'math', 13)
    note4 = ('eleve1', 'eco', 12)
    note5 = ('eleve1', 'eco', 13)
    note6 = ('eleve1', 'math', 12)
    note7 = ('eleve2', 'math', 13)
    note8 = ('eleve2', 'math', 14)
    
    notes = [note1, note2, note3, note4, note5, note6,note7,note8]
    
    #Question 4.a)
    liste1 = (i for i in notes if i[0] == 'eleve1')
>   moyenne1 = sum(x[2] for x in liste1)/len(liste1)
E   TypeError: object of type 'generator' has no len()

main.py:14: TypeError
_____________________________ Test1603sute.test_9 ______________________________

self = <c16_03.test_16_03.Test1603sute testMethod=test_9>

    def test_9(self):
        try:
>           from .main  import Note

test_16_03.py:87: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    note1 = ('eleve1', 'math', 13)
    note2 = ('eleve1', 'physique', 15)
    note3 = ('eleve1', 'math', 13)
    note4 = ('eleve1', 'eco', 12)
    note5 = ('eleve1', 'eco', 13)
    note6 = ('eleve1', 'math', 12)
    note7 = ('eleve2', 'math', 13)
    note8 = ('eleve2', 'math', 14)
    
    notes = [note1, note2, note3, note4, note5, note6,note7,note8]
    
    #Question 4.a)
    liste1 = (i for i in notes if i[0] == 'eleve1')
>   moyenne1 = sum(x[2] for x in liste1)/len(liste1)
E   TypeError: object of type 'generator' has no len()

main.py:14: TypeError

During handling of the above exception, another exception occurred:

self = <c16_03.test_16_03.Test1603sute testMethod=test_9>

    def test_9(self):
        try:
            from .main  import Note
        except:
>          assert False
E          AssertionError: assert False

test_16_03.py:89: AssertionError
=========================== short test summary info ============================
FAILED test_16_03.py::Test1603sute::test_10 - AssertionError: assert False
FAILED test_16_03.py::Test1603sute::test_4 - TypeError: object of type 'gener...
FAILED test_16_03.py::Test1603sute::test_5 - AssertionError: assert False
FAILED test_16_03.py::Test1603sute::test_6 - TypeError: object of type 'gener...
FAILED test_16_03.py::Test1603sute::test_8 - TypeError: object of type 'gener...
FAILED test_16_03.py::Test1603sute::test_9 - AssertionError: assert False
========================= 6 failed, 1 passed in 0.08s ==========================
